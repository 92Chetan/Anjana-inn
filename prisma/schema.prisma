// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String 
  email String @unique
  password String
  isVerified Boolean?
  authCode String? @unique
  resetHash String? @unique
  room String?
  status String?
  avatar String
  role String @default("user")
  createAt DateTime @default(now())
  Feedback Feedback[]
  Subscription Subscription[]
}

model Feedback{
  id String @id @default(uuid())
  rating String
  message String
  auther_id String
  user User @relation(fields: [auther_id] ,references: [id],onDelete: Cascade)
   createAt DateTime @default(now())
}

model ContactUs{
  id String @id @default(uuid())
 fullName String
 phone String
  email String
  message String
  createAt DateTime @default(now())
}

model Subscription{
  id String @id @default(uuid())
  sub_id String? @unique
  order_id String? @unique
  status String?
  start_at Int?
  addon Boolean
  end_at Int?
  electricity Int?
  user_id String
  wifiPrice String?
  electricityPrice String?

  user User @relation(fields: [user_id] ,references: [id],onDelete: Cascade)

  createAt DateTime @default(now())
}

enum timeline_type {
    daily 
    monthly
     quarterly 
     annual
     custom
}

model Bill{
  id String @id @default(uuid())
  price Int
  timeline timeline_type
  typeofRoom String?
  entity String
  roomType Json?
  service Json
  plan_id String?
  createAt DateTime @default(now())
}

model Vistiors{
 id String @id @default(uuid())
 device String 
 min String
 hour String
 createAt DateTime
}